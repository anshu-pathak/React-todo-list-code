{"version":3,"sources":["TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","className","aria-hidden","onClick","onSelect","id","text","App","useState","inputList","setInputList","Items","setItems","removeItem","console","log","oldItems","filter","arrElem","index","type","onChange","event","target","value","placeholder","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAoBeA,EAlBE,SAACC,GAGd,OACI,mCACA,sBAAKC,UAAU,aAAf,UACI,mBAAGA,UAAU,cACTC,cAAY,OACZC,QAAS,WACLH,EAAMI,SAASJ,EAAMK,OAG7B,6BAAKL,EAAMM,aCuDRC,G,MA/DH,WAAO,IAAD,EAEmBC,mBAAS,IAF5B,mBAETC,EAFS,KAEGC,EAFH,OAKUF,mBAAS,IALnB,mBAKTG,EALS,KAKFC,EALE,KAqBVC,EAAa,SAACR,GAClBS,QAAQC,IAAI,eACZH,GAAS,SAACI,GACR,OAAOA,EAASC,QAAO,SAACC,EAASC,GAC/B,OAAOA,IAAUd,SAMvB,OAEE,aADA,CACA,qBACE,qBAAKJ,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,6CACA,uBACA,uBAAOmB,KAAM,OACXC,SA/BQ,SAACC,GACjBZ,EAAaY,EAAMC,OAAOC,QA+BlBC,YAAa,gBACbD,MAAQf,IAEV,wBAAQN,QA/BI,WAClBS,GAAS,SAACI,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBP,OAGvBC,EAAa,KA0BP,iBAEA,6BAGGC,EAAMe,KAAI,SAACC,EAASR,GACpB,OAAO,cAAC,EAAD,CAENd,GAAIc,EACJb,KAAQqB,EACRvB,SAAYS,GAHPM,iBC7CJS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.94a8ef65.chunk.js","sourcesContent":["import React from 'react';\n\nconst TodoList = (props) => {\n\n\n    return(\n        <>\n        <div className=\"todo_style\">\n            <i className=\"fa fa-times\" \n                aria-hidden=\"true\" \n                onClick={()=> {\n                    props.onSelect(props.id);\n                }}\n            />\n            <li>{props.text}</li>\n        </div>\n        </>\n    );\n}\n\nexport default TodoList;","import React, { useState } from 'react';\nimport TodoList from \"./TodoList\";\nimport './App.css';\n\n\n\nconst App = () => {\n\n  const [inputList , setInputList] = useState(\"\");\n\n  // empty Array\n  const [Items, setItems] = useState([]);\n\n\n\n  const itemEvent = (event) => {\n    setInputList(event.target.value);\n  };\n\n  const ListOfItems = () => {\n    setItems((oldItems)=>{\n      return [...oldItems, inputList];\n\n    })\n    setInputList(\"\");\n  };\n\n  const removeItem = (id) => {\n    console.log(\"remove item\")\n    setItems((oldItems)=> {\n      return oldItems.filter((arrElem, index)=>{\n        return index !== id;\n      })\n    })\n  }\n\n  \n  return (\n    // raect figments\n    <>\n      <div className=\"main_div\">\n        <div className=\"center_div\">\n          <br />\n          <h1> ToDo List </h1>\n          <br />\n          <input type= \"text\" \n            onChange={itemEvent} \n            placeholder= \"Add a item !!\" \n            value= {inputList}\n          />\n          <button onClick={ListOfItems}> + </button>\n\n          <ol> \n            {/* <li> {inputList}</li> */}\n            {/* calling array with map methode */}\n            {Items.map((itemval, index)=> {\n             return <TodoList \n              key={index} \n              id={index}\n              text = {itemval} \n              onSelect = {removeItem}\n              />\n            })}\n          </ol>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}